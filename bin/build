#!/bin/bash

TAG=latest

while getopts "t:d:r:nh" opt; do
  case $opt in
    d) IMAGE_DIR=$OPTARG ;;
    n) NO_CACHE="true" ;;
    p) PUSH="true" ;;
    r) REPO=$OPTARG ;;
    t) TAG=$OPTARG ;;
    h) echo "Usage: $0 -d IMAGE_DIR -r IMAGE_REPOSITORY [-hnp] [ -t IMAGE_TAG ]"; exit 1
  esac
done

if [ -z "$IMAGE_DIR" ]; then
  echo "Required parameter for image directory (-d) is missing"
  exit 1
fi

if [ -z "$REPO" ]; then
  echo "Required parameter for repository (-r) is missing"
  exit 1
fi

images="manageiq-base-worker manageiq-orchestrator manageiq-webserver-worker manageiq-ui-worker"

pushd $IMAGE_DIR
  if [ -n "$NO_CACHE" ]; then
    docker build -t $REPO/manageiq-base:$TAG --no-cache manageiq-base
  else
    docker build -t $REPO/manageiq-base:$TAG manageiq-base
  fi

  for image in $images; do
    docker build -t $REPO/$image:$TAG --build-arg FROM_REPO=$REPO --build-arg FROM_TAG=$TAG $image
  done
popd

if [ -n "$PUSH" ]; then
  for image in images; do
    docker push $REPO/$image:$TAG
  done
fi
